@model Mantenimiento.Models.DTO.CrudBaseDTO

<div class="modal-header">
    <h4>Formulario</h4>
</div>
<div class="modal-body">
    <form id="formMantenimiento">
        @Html.HiddenFor(x => x.Id)
        <div class="form-group">
            @Html.LabelFor(x => x.Codigo, "Código")
            @Html.TextBoxFor(x => x.Codigo, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Descripcioncorta, "Descripción Corta")
            @Html.TextBoxFor(x => x.Descripcioncorta, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Descripcionlarga, "Descripción Larga")
            @Html.TextBoxFor(x => x.Descripcionlarga, new { @class = "form-control" })
        </div>
        @if (Model.Id != 0)
        {
            <div class="form-group">
                @Html.LabelFor(x => x.Estado)
                @Html.CheckBoxFor(x => x.Estado, new { @class = "form-check", @type = "checkbox" })
            </div>
        }
    </form>
</div>
<div class="modal-footer">
    <div style="text-align:end">
        <button type="button" class="btn btn-success" onclick="ValidateForm()">Guardar</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
    </div>
</div>

<script>
    var formMantenimiento = $("#formMantenimiento");

    formMantenimiento.validate({
        ignore: [],
        rules: {
            'Codigo': {
                required: true
            },
            'Descripcioncorta': {
                required: true
            },
            'Descripcionlarga': {
                required: true
            }
        },
        messages: {
            'Codigo': {
                required: "El campo Código es requerido."
            },
            'Descripcioncorta': {
                required: "El campo Descripción Corta es requerido."
            },
            'Descripcionlarga': {
                required: "El campo Descripción Larga es requerido."
            }
        },
        errorPlacement: function (error, element) {
    		if(element.hasClass('select2') && element.next('.select2-container').length) {
        	error.insertAfter(element.next('.select2-container'));
            } else if (element.parent('.input-group').length) {
                error.insertAfter(element.parent());
            }
            else if (element.prop('type') === 'radio' && element.parent('.radio-inline').length) {
                error.insertAfter(element.parent().parent());
            }
            else if (element.prop('type') === 'checkbox' || element.prop('type') === 'radio') {
                error.appendTo(element.parent().parent());
            }
            else {
                error.insertAfter(element);
            }
        },
        errorClass: "my-error-class",
        validClass: "my-valid-class"
    });

    $(window).keydown(function (event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            //AjaxSubmit();
            return false;
        }
    });

    function ValidateForm() {
        if (formMantenimiento.valid()) AjaxSubmit();
    }

    function AjaxSubmit() {
        $.ajax({
            url: "@Url.Action("Guardar", "MantenimientoApi", new { area = "Mantenimiento" })",
            type: "POST",
            dataType: "JSON",
            data: formMantenimiento.serialize(),
            beforeSend: function () {
                //$('#ibox1').children('.ibox-content').toggleClass('sk-loading');
            },
            complete: function () {
                //$('#ibox1').children('.ibox-content').toggleClass('sk-loading');
            },
            success: function (data) {
                console.log(data)
                var success = data.result;
                var message = data.message;
                if (success == true) {
                    $("#nuevoRegistroModal").modal('hide');
                    loadDataTableCruds();
                    toastr.success(message, 'Correcto!')
                }
                else {
                    toastr.error(message, 'Error!')
                }
            },
            error: function (data) {
                toastr.error("Error de conexión con el servidor.", 'Error!')
            }
        });
    }
</script>